{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","password","userInfo","setUserInfo","newAccount","setNewAccout","error","setError","handleChange","e","target","name","value","handleSubmit","a","preventDefault","createUserWithEmailAndPassword","data","console","log","signInWithEmailAndPassword","message","onSubmit","className","type","placeholder","onChange","required","onClick","prev","Auth","handleClickSocial","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","isEditing","setIsEditing","text","newTweet","setNewTweet","handleToggle","handleDelete","window","confirm","doc","id","delete","imgStrUrl","refFromURL","update","autoFocus","src","alt","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","imgStr","setImgStr","imgStrRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArr","docs","map","marginTop","tw","key","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","where","orderBy","get","getMyTweets","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","path","exact","component","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8ebef46.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n  const [userInfo, setUserInfo] = useState({ email: '', password: '' });\n  const [newAccount, setNewAccout] = useState(true);\n  const [error, setError] = useState('');\n  const { email, password } = userInfo;\n\n  const handleToggle = () => setNewAccout(prev => !prev);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n        console.log(data);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? 'Create Account' : 'Sign In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={handleToggle} className=\"authSwitch\">\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService, firebaseInstance } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const handleClickSocial = async e => {\n    const { name } = e.target;\n    let provider;\n\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n\n      <div className=\"authBtns\">\n        <button onClick={handleClickSocial} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={handleClickSocial} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const handleToggle = () => setIsEditing(!isEditing);\n  const handleChange = e => setNewTweet(e.target.value);\n\n  const handleDelete = async () => {\n    const ok = window.confirm('Are you sure you want to delete this tweet?');\n    if (ok) {\n      // Delete tweet from firestore\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n\n      // Delete an image from storage\n      if (tweetObj.imgStrUrl !== '')\n        await storageService.refFromURL(tweetObj.imgStrUrl).delete();\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({ text: newTweet });\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {isEditing ? (\n        <>\n          <form onSubmit={handleSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={newTweet}\n              onChange={handleChange}\n              required\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update tweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={handleToggle} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.imgStrUrl && <img src={tweetObj.imgStrUrl} alt=\"Tweet\" />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={handleDelete}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={handleToggle}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from 'react';\nimport { storageService, dbService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState('');\n  const [imgStr, setImgStr] = useState('');\n\n  const handleChange = e => {\n    setTweet(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    if (tweet === '') {\n      return;\n    }\n\n    let imgStrUrl = '';\n    e.preventDefault();\n\n    if (imgStr !== '') {\n      const imgStrRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const res = await imgStrRef.putString(imgStr, 'data_url');\n      imgStrUrl = await res.ref.getDownloadURL();\n    }\n\n    const newTweet = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      imgStrUrl,\n    };\n\n    await dbService.collection('tweets').add(newTweet);\n    setTweet('');\n    setImgStr('');\n  };\n\n  const handleChangeImg = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const result = finishedEvent.currentTarget.result;\n      setImgStr(result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const handleDeleteImg = () => setImgStr('');\n\n  // return (\n  //   <form onSubmit={handleSubmit}>\n  //     <input\n  //       type=\"text\"\n  //       placeholder=\"What's on your mind?\"\n  //       maxLength={120}\n  //       value={tweet}\n  //       onChange={handleChange}\n  //     />\n  //     <input type=\"file\" accept=\"image/*\" onChange={handleChangeImg} />\n  //     <input type=\"submit\" value=\"Tweet\" />\n  //     {imgStr && (\n  //       <div>\n  //         <img src={imgStr} width=\"50px\" height=\"50px\" alt=\"Tweet\" />\n  //         <button onClick={handleDeleteImg}>Clear</button>\n  //       </div>\n  //     )}\n  //   </form>\n  // );\n\n  return (\n    <form onSubmit={handleSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleChangeImg}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {imgStr && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={imgStr}\n            style={{\n              backgroundImage: imgStr,\n            }}\n            alt=\"Tweet\"\n          />\n          <div className=\"factoryForm__clear\" onClick={handleDeleteImg}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\n\nimport Tweet from 'components/Tweet';\nimport TweetFactory from 'components/TweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    // Listen changing from firestore (update in realtime)\n    dbService.collection('tweets').onSnapshot(snapshot => {\n      const tweetArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n\n      setTweets(tweetArr);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n\n      <div style={{ marginTop: 30 }}>\n        {tweets.map(tw => (\n          <Tweet\n            key={tw.id}\n            tweetObj={tw}\n            isOwner={tw.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService, dbService } from 'fbase';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (userObj.displayName !== '') {\n      // You can update display name and photo url\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  const handleChange = e => {\n    setNewDisplayName(e.target.value);\n  };\n\n  useEffect(() => {\n    const getMyTweets = async () => {\n      // Filtering tweets using query\n      await dbService\n        .collection('tweets')\n        .where('creatorId', '==', userObj.uid)\n        .orderBy('createdAt')\n        .get();\n    };\n\n    getMyTweets();\n  }, [userObj.uid]);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={handleChange}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={handleClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}>\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : 'Profile'}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div>\n            <Route\n              path=\"/\"\n              exact\n              component={() => <Home userObj={userObj} />}\n            />\n            <Route\n              path=\"/profile\"\n              exact\n              component={() => (\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              )}\n            />\n          </div>\n        ) : (\n          <Route exact path=\"/\" component={Auth} />\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from 'react';\nimport { authService } from 'fbase';\n\nimport AppRouter from 'components/AppRouter';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // Listen to change from authentication (login, logout, reset init app)\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        // Reduce object size (from user object) in order to trigger re-rendering\n        // If object is too big, react doesn't trigger re-rendering\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <div>\n      {init ? (\n        <AppRouter\n          isLoggedIn={userObj}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        'Initializing...'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}